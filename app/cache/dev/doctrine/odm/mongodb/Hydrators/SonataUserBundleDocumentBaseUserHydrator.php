<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\Query\Query;
use Doctrine\ODM\MongoDB\UnitOfWork;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadataInfo;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class SonataUserBundleDocumentBaseUserHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="date") */
        if (isset($data['createdAt'])) {
            $value = $data['createdAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['createdAt']->setValue($document, clone $return);
            $hydratedData['createdAt'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['updatedAt'])) {
            $value = $data['updatedAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['updatedAt']->setValue($document, clone $return);
            $hydratedData['updatedAt'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['dateOfBirth'])) {
            $value = $data['dateOfBirth'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['dateOfBirth']->setValue($document, clone $return);
            $hydratedData['dateOfBirth'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['firstname']) || (! empty($this->class->fieldMappings['firstname']['nullable']) && array_key_exists('firstname', $data))) {
            $value = $data['firstname'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['firstname']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['firstname']->setValue($document, $return);
            $hydratedData['firstname'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['lastname']) || (! empty($this->class->fieldMappings['lastname']['nullable']) && array_key_exists('lastname', $data))) {
            $value = $data['lastname'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['lastname']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['lastname']->setValue($document, $return);
            $hydratedData['lastname'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['website']) || (! empty($this->class->fieldMappings['website']['nullable']) && array_key_exists('website', $data))) {
            $value = $data['website'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['website']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['website']->setValue($document, $return);
            $hydratedData['website'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['biography']) || (! empty($this->class->fieldMappings['biography']['nullable']) && array_key_exists('biography', $data))) {
            $value = $data['biography'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['biography']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['biography']->setValue($document, $return);
            $hydratedData['biography'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['gender']) || (! empty($this->class->fieldMappings['gender']['nullable']) && array_key_exists('gender', $data))) {
            $value = $data['gender'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['gender']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['gender']->setValue($document, $return);
            $hydratedData['gender'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['locale']) || (! empty($this->class->fieldMappings['locale']['nullable']) && array_key_exists('locale', $data))) {
            $value = $data['locale'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['locale']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['locale']->setValue($document, $return);
            $hydratedData['locale'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['timezone']) || (! empty($this->class->fieldMappings['timezone']['nullable']) && array_key_exists('timezone', $data))) {
            $value = $data['timezone'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['timezone']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['timezone']->setValue($document, $return);
            $hydratedData['timezone'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['phone']) || (! empty($this->class->fieldMappings['phone']['nullable']) && array_key_exists('phone', $data))) {
            $value = $data['phone'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['phone']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['phone']->setValue($document, $return);
            $hydratedData['phone'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['facebookUid']) || (! empty($this->class->fieldMappings['facebookUid']['nullable']) && array_key_exists('facebookUid', $data))) {
            $value = $data['facebookUid'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['facebookUid']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['facebookUid']->setValue($document, $return);
            $hydratedData['facebookUid'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['facebookName']) || (! empty($this->class->fieldMappings['facebookName']['nullable']) && array_key_exists('facebookName', $data))) {
            $value = $data['facebookName'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['facebookName']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['facebookName']->setValue($document, $return);
            $hydratedData['facebookName'] = $return;
        }

        /** @Field(type="hash") */
        if (isset($data['facebookData']) || (! empty($this->class->fieldMappings['facebookData']['nullable']) && array_key_exists('facebookData', $data))) {
            $value = $data['facebookData'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['facebookData']['type'];
                $return = $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['facebookData']->setValue($document, $return);
            $hydratedData['facebookData'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['twitterUid']) || (! empty($this->class->fieldMappings['twitterUid']['nullable']) && array_key_exists('twitterUid', $data))) {
            $value = $data['twitterUid'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['twitterUid']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['twitterUid']->setValue($document, $return);
            $hydratedData['twitterUid'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['twitterName']) || (! empty($this->class->fieldMappings['twitterName']['nullable']) && array_key_exists('twitterName', $data))) {
            $value = $data['twitterName'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['twitterName']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['twitterName']->setValue($document, $return);
            $hydratedData['twitterName'] = $return;
        }

        /** @Field(type="hash") */
        if (isset($data['twitterData']) || (! empty($this->class->fieldMappings['twitterData']['nullable']) && array_key_exists('twitterData', $data))) {
            $value = $data['twitterData'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['twitterData']['type'];
                $return = $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['twitterData']->setValue($document, $return);
            $hydratedData['twitterData'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['gplusUid']) || (! empty($this->class->fieldMappings['gplusUid']['nullable']) && array_key_exists('gplusUid', $data))) {
            $value = $data['gplusUid'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['gplusUid']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['gplusUid']->setValue($document, $return);
            $hydratedData['gplusUid'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['gplusName']) || (! empty($this->class->fieldMappings['gplusName']['nullable']) && array_key_exists('gplusName', $data))) {
            $value = $data['gplusName'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['gplusName']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['gplusName']->setValue($document, $return);
            $hydratedData['gplusName'] = $return;
        }

        /** @Field(type="hash") */
        if (isset($data['gplusData']) || (! empty($this->class->fieldMappings['gplusData']['nullable']) && array_key_exists('gplusData', $data))) {
            $value = $data['gplusData'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['gplusData']['type'];
                $return = $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['gplusData']->setValue($document, $return);
            $hydratedData['gplusData'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['token']) || (! empty($this->class->fieldMappings['token']['nullable']) && array_key_exists('token', $data))) {
            $value = $data['token'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['token']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['token']->setValue($document, $return);
            $hydratedData['token'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['twoStepVerificationCode']) || (! empty($this->class->fieldMappings['twoStepVerificationCode']['nullable']) && array_key_exists('twoStepVerificationCode', $data))) {
            $value = $data['twoStepVerificationCode'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['twoStepVerificationCode']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['twoStepVerificationCode']->setValue($document, $return);
            $hydratedData['twoStepVerificationCode'] = $return;
        }
        return $hydratedData;
    }
}
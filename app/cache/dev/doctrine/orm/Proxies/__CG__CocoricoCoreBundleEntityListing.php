<?php

namespace Proxies\__CG__\Cocorico\CoreBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Listing extends \Cocorico\CoreBundle\Entity\Listing implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Cocorico\\CoreBundle\\Entity\\Listing' . "\0" . 'id', '' . "\0" . 'Cocorico\\CoreBundle\\Entity\\Listing' . "\0" . 'user', '' . "\0" . 'Cocorico\\CoreBundle\\Entity\\Listing' . "\0" . 'location', '' . "\0" . 'Cocorico\\CoreBundle\\Entity\\Listing' . "\0" . 'listingListingCategories', '' . "\0" . 'Cocorico\\CoreBundle\\Entity\\Listing' . "\0" . 'images', '' . "\0" . 'Cocorico\\CoreBundle\\Entity\\Listing' . "\0" . 'listingListingCharacteristics', '' . "\0" . 'Cocorico\\CoreBundle\\Entity\\Listing' . "\0" . 'discounts', '' . "\0" . 'Cocorico\\CoreBundle\\Entity\\Listing' . "\0" . 'bookings', '' . "\0" . 'Cocorico\\CoreBundle\\Entity\\Listing' . "\0" . 'threads', '' . "\0" . 'Cocorico\\CoreBundle\\Entity\\Listing' . "\0" . 'options', 'status', 'type', 'price', 'certified', 'minDuration', 'maxDuration', 'cancellationPolicy', 'averageRating', 'commentCount', 'adminNotation', 'availabilitiesUpdatedAt', 'createdAt', 'updatedAt', 'translations', 'newTranslations', 'currentLocale', 'defaultLocale'];
        }

        return ['__isInitialized__', '' . "\0" . 'Cocorico\\CoreBundle\\Entity\\Listing' . "\0" . 'id', '' . "\0" . 'Cocorico\\CoreBundle\\Entity\\Listing' . "\0" . 'user', '' . "\0" . 'Cocorico\\CoreBundle\\Entity\\Listing' . "\0" . 'location', '' . "\0" . 'Cocorico\\CoreBundle\\Entity\\Listing' . "\0" . 'listingListingCategories', '' . "\0" . 'Cocorico\\CoreBundle\\Entity\\Listing' . "\0" . 'images', '' . "\0" . 'Cocorico\\CoreBundle\\Entity\\Listing' . "\0" . 'listingListingCharacteristics', '' . "\0" . 'Cocorico\\CoreBundle\\Entity\\Listing' . "\0" . 'discounts', '' . "\0" . 'Cocorico\\CoreBundle\\Entity\\Listing' . "\0" . 'bookings', '' . "\0" . 'Cocorico\\CoreBundle\\Entity\\Listing' . "\0" . 'threads', '' . "\0" . 'Cocorico\\CoreBundle\\Entity\\Listing' . "\0" . 'options', 'status', 'type', 'price', 'certified', 'minDuration', 'maxDuration', 'cancellationPolicy', 'averageRating', 'commentCount', 'adminNotation', 'availabilitiesUpdatedAt', 'createdAt', 'updatedAt', 'translations', 'newTranslations', 'currentLocale', 'defaultLocale'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Listing $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function addListingListingCharacteristic(\Cocorico\CoreBundle\Entity\ListingListingCharacteristic $listingListingCharacteristic)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addListingListingCharacteristic', [$listingListingCharacteristic]);

        return parent::addListingListingCharacteristic($listingListingCharacteristic);
    }

    /**
     * {@inheritDoc}
     */
    public function removeListingListingCharacteristic(\Cocorico\CoreBundle\Entity\ListingListingCharacteristic $listingListingCharacteristic)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeListingListingCharacteristic', [$listingListingCharacteristic]);

        return parent::removeListingListingCharacteristic($listingListingCharacteristic);
    }

    /**
     * {@inheritDoc}
     */
    public function getListingListingCharacteristics()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getListingListingCharacteristics', []);

        return parent::getListingListingCharacteristics();
    }

    /**
     * {@inheritDoc}
     */
    public function getListingListingCharacteristicsOrderedByGroup()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getListingListingCharacteristicsOrderedByGroup', []);

        return parent::getListingListingCharacteristicsOrderedByGroup();
    }

    /**
     * {@inheritDoc}
     */
    public function addListingListingCharacteristicsOrderedByGroup(\Cocorico\CoreBundle\Entity\ListingListingCharacteristic $listingListingCharacteristic)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addListingListingCharacteristicsOrderedByGroup', [$listingListingCharacteristic]);

        return parent::addListingListingCharacteristicsOrderedByGroup($listingListingCharacteristic);
    }

    /**
     * {@inheritDoc}
     */
    public function removeListingListingCharacteristicsOrderedByGroup(\Cocorico\CoreBundle\Entity\ListingListingCharacteristic $listingListingCharacteristic)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeListingListingCharacteristicsOrderedByGroup', [$listingListingCharacteristic]);

        return parent::removeListingListingCharacteristicsOrderedByGroup($listingListingCharacteristic);
    }

    /**
     * {@inheritDoc}
     */
    public function addListingListingCategory(\Cocorico\CoreBundle\Entity\ListingListingCategory $listingListingCategory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addListingListingCategory', [$listingListingCategory]);

        return parent::addListingListingCategory($listingListingCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function removeListingListingCategory(\Cocorico\CoreBundle\Entity\ListingListingCategory $listingListingCategory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeListingListingCategory', [$listingListingCategory]);

        return parent::removeListingListingCategory($listingListingCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function getListingListingCategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getListingListingCategories', []);

        return parent::getListingListingCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\Cocorico\UserBundle\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function addImage(\Cocorico\CoreBundle\Entity\ListingImage $image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addImage', [$image]);

        return parent::addImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function removeImage(\Cocorico\CoreBundle\Entity\ListingImage $image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeImage', [$image]);

        return parent::removeImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getImages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImages', []);

        return parent::getImages();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocation(\Cocorico\CoreBundle\Entity\ListingLocation $location = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocation', [$location]);

        return parent::setLocation($location);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocation', []);

        return parent::getLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function addDiscount(\Cocorico\CoreBundle\Entity\ListingDiscount $discount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDiscount', [$discount]);

        return parent::addDiscount($discount);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDiscount(\Cocorico\CoreBundle\Entity\ListingDiscount $discount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDiscount', [$discount]);

        return parent::removeDiscount($discount);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiscounts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiscounts', []);

        return parent::getDiscounts();
    }

    /**
     * {@inheritDoc}
     */
    public function setDiscounts(\Doctrine\Common\Collections\ArrayCollection $discounts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiscounts', [$discounts]);

        return parent::setDiscounts($discounts);
    }

    /**
     * {@inheritDoc}
     */
    public function getBookings()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBookings', []);

        return parent::getBookings();
    }

    /**
     * {@inheritDoc}
     */
    public function setBookings(\Doctrine\Common\Collections\ArrayCollection $bookings)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBookings', [$bookings]);

        return parent::setBookings($bookings);
    }

    /**
     * {@inheritDoc}
     */
    public function addBooking(\Cocorico\CoreBundle\Entity\Booking $booking)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBooking', [$booking]);

        return parent::addBooking($booking);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBooking(\Cocorico\CoreBundle\Entity\Booking $booking)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBooking', [$booking]);

        return parent::removeBooking($booking);
    }

    /**
     * {@inheritDoc}
     */
    public function getThreads()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getThreads', []);

        return parent::getThreads();
    }

    /**
     * {@inheritDoc}
     */
    public function setThreads(\Doctrine\Common\Collections\ArrayCollection $threads)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setThreads', [$threads]);

        return parent::setThreads($threads);
    }

    /**
     * {@inheritDoc}
     */
    public function addThread(\Cocorico\MessageBundle\Entity\Thread $thread)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addThread', [$thread]);

        return parent::addThread($thread);
    }

    /**
     * {@inheritDoc}
     */
    public function removeThread(\Cocorico\MessageBundle\Entity\Thread $thread)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeThread', [$thread]);

        return parent::removeThread($thread);
    }

    /**
     * {@inheritDoc}
     */
    public function addOption($option)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOption', [$option]);

        return parent::addOption($option);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOption($option)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOption', [$option]);

        return parent::removeOption($option);
    }

    /**
     * {@inheritDoc}
     */
    public function getOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOptions', []);

        return parent::getOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setOptions(\Doctrine\Common\Collections\ArrayCollection $options)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOptions', [$options]);

        return parent::setOptions($options);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompletionInformations($minImages, $strict = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompletionInformations', [$minImages, $strict]);

        return parent::getCompletionInformations($minImages, $strict);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', []);

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function __call($method, $arguments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__call', [$method, $arguments]);

        return parent::__call($method, $arguments);
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusText()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusText', []);

        return parent::getStatusText();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', [$price]);

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', []);

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function getPriceDecimal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriceDecimal', []);

        return parent::getPriceDecimal();
    }

    /**
     * {@inheritDoc}
     */
    public function getAmountFeeAsOffererDecimal($feeAsOfferer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAmountFeeAsOffererDecimal', [$feeAsOfferer]);

        return parent::getAmountFeeAsOffererDecimal($feeAsOfferer);
    }

    /**
     * {@inheritDoc}
     */
    public function getAmountToPayToOffererDecimal($feeAsOfferer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAmountToPayToOffererDecimal', [$feeAsOfferer]);

        return parent::getAmountToPayToOffererDecimal($feeAsOfferer);
    }

    /**
     * {@inheritDoc}
     */
    public function amountToPayToOffererForPriceExcludingVATDecimal($feeAsOfferer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'amountToPayToOffererForPriceExcludingVATDecimal', [$feeAsOfferer]);

        return parent::amountToPayToOffererForPriceExcludingVATDecimal($feeAsOfferer);
    }

    /**
     * {@inheritDoc}
     */
    public function getAmountFeeAsOffererForPriceExcludingVATDecimal($feeAsOfferer, $vatRate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAmountFeeAsOffererForPriceExcludingVATDecimal', [$feeAsOfferer, $vatRate]);

        return parent::getAmountFeeAsOffererForPriceExcludingVATDecimal($feeAsOfferer, $vatRate);
    }

    /**
     * {@inheritDoc}
     */
    public function isCertified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCertified', []);

        return parent::isCertified();
    }

    /**
     * {@inheritDoc}
     */
    public function setCertified($certified)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCertified', [$certified]);

        return parent::setCertified($certified);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeText()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeText', []);

        return parent::getTypeText();
    }

    /**
     * {@inheritDoc}
     */
    public function getCertified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCertified', []);

        return parent::getCertified();
    }

    /**
     * {@inheritDoc}
     */
    public function getMinDuration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMinDuration', []);

        return parent::getMinDuration();
    }

    /**
     * {@inheritDoc}
     */
    public function setMinDuration($minDuration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMinDuration', [$minDuration]);

        return parent::setMinDuration($minDuration);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxDuration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxDuration', []);

        return parent::getMaxDuration();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxDuration($maxDuration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxDuration', [$maxDuration]);

        return parent::setMaxDuration($maxDuration);
    }

    /**
     * {@inheritDoc}
     */
    public function getCancellationPolicy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCancellationPolicy', []);

        return parent::getCancellationPolicy();
    }

    /**
     * {@inheritDoc}
     */
    public function setCancellationPolicy($cancellationPolicy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCancellationPolicy', [$cancellationPolicy]);

        return parent::setCancellationPolicy($cancellationPolicy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCancellationPolicyText()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCancellationPolicyText', []);

        return parent::getCancellationPolicyText();
    }

    /**
     * {@inheritDoc}
     */
    public function getCancellationPolicyDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCancellationPolicyDescription', []);

        return parent::getCancellationPolicyDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setAverageRating($averageRating)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAverageRating', [$averageRating]);

        return parent::setAverageRating($averageRating);
    }

    /**
     * {@inheritDoc}
     */
    public function getAverageRating()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAverageRating', []);

        return parent::getAverageRating();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommentCount($commentCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommentCount', [$commentCount]);

        return parent::setCommentCount($commentCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommentCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommentCount', []);

        return parent::getCommentCount();
    }

    /**
     * {@inheritDoc}
     */
    public function getAdminNotation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdminNotation', []);

        return parent::getAdminNotation();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdminNotation($adminNotation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdminNotation', [$adminNotation]);

        return parent::setAdminNotation($adminNotation);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvailabilitiesUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvailabilitiesUpdatedAt', []);

        return parent::getAvailabilitiesUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvailabilitiesUpdatedAt($availabilitiesUpdatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvailabilitiesUpdatedAt', [$availabilitiesUpdatedAt]);

        return parent::setAvailabilitiesUpdatedAt($availabilitiesUpdatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function updateTimestamps()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateTimestamps', []);

        return parent::updateTimestamps();
    }

    /**
     * {@inheritDoc}
     */
    public function getTranslations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTranslations', []);

        return parent::getTranslations();
    }

    /**
     * {@inheritDoc}
     */
    public function getNewTranslations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNewTranslations', []);

        return parent::getNewTranslations();
    }

    /**
     * {@inheritDoc}
     */
    public function addTranslation($translation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTranslation', [$translation]);

        return parent::addTranslation($translation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTranslation($translation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTranslation', [$translation]);

        return parent::removeTranslation($translation);
    }

    /**
     * {@inheritDoc}
     */
    public function translate($locale = NULL, $fallbackToDefault = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'translate', [$locale, $fallbackToDefault]);

        return parent::translate($locale, $fallbackToDefault);
    }

    /**
     * {@inheritDoc}
     */
    public function mergeNewTranslations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'mergeNewTranslations', []);

        return parent::mergeNewTranslations();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrentLocale($locale)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrentLocale', [$locale]);

        return parent::setCurrentLocale($locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrentLocale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrentLocale', []);

        return parent::getCurrentLocale();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultLocale($locale)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultLocale', [$locale]);

        return parent::setDefaultLocale($locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultLocale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultLocale', []);

        return parent::getDefaultLocale();
    }

}
